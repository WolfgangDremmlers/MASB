# MASB - Multilingual Adversarial Safety Benchmark
# Docker Compose configuration for development and production

version: '3.8'

services:
  # Main MASB Application
  masb-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - MASB_ENVIRONMENT=production
      - MASB_DATABASE_URL=sqlite:///data/masb_results.db
      - MASB_LOG_LEVEL=INFO
      - MASB_CACHE_ENABLED=true
      - MASB_WEB_HOST=0.0.0.0
      - MASB_WEB_PORT=8080
    volumes:
      - masb_data:/app/data
      - masb_logs:/app/logs
      - masb_results:/app/results
      - masb_cache:/app/cache
      - ./config:/app/config:ro
    depends_on:
      - masb-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database (optional, for production)
  masb-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: masb
      POSTGRES_USER: masb_user
      POSTGRES_PASSWORD: masb_password
    volumes:
      - masb_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U masb_user -d masb"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  masb-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - masb_redis:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Nginx reverse proxy (for production)
  masb-nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - masb-app
    restart: unless-stopped
    profiles:
      - production

  # Development service with hot reload
  masb-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
      - "5678:5678"  # debugpy
    environment:
      - MASB_ENVIRONMENT=development
      - MASB_DEBUG=true
      - MASB_LOG_LEVEL=DEBUG
      - FLASK_ENV=development
    volumes:
      - .:/app
      - masb_dev_data:/app/data
    profiles:
      - development

volumes:
  masb_data:
    driver: local
  masb_logs:
    driver: local
  masb_results:
    driver: local
  masb_cache:
    driver: local
  masb_postgres:
    driver: local
  masb_redis:
    driver: local
  masb_dev_data:
    driver: local

networks:
  default:
    name: masb-network